declare module BABYLON {
    class FreeCamera extends Camera {
        public cameraDirection: Vector3;
        public cameraRotation: Vector2;
        public rotation: Vector3;
        public ellipsoid: Vector3;
        public keysUp: number[];
        public keysDown: number[];
        public keysLeft: number[];
        public keysRight: number[];
        public speed: number;
        public checkCollisions: boolean;
        public applyGravity: boolean;
        public noRotationConstraint: boolean;
        public angularSensibility: number;
        public lockedTarget: any;
        public onCollide: any;
        private _keys;
        private _collider;
        private _needMoveForGravity;
        private _currentTarget;
        private _viewMatrix;
        private _camMatrix;
        private _cameraTransformMatrix;
        private _cameraRotationMatrix;
        private _referencePoint;
        private _transformedReferencePoint;
        private _oldPosition;
        private _diffPosition;
        private _newPosition;
        private _lookAtTemp;
        private _tempMatrix;
        private _attachedElement;
        private _localDirection;
        private _transformedDirection;
        private _onMouseDown;
        private _onMouseUp;
        private _onMouseOut;
        private _onMouseMove;
        private _onKeyDown;
        private _onKeyUp;
        private _onLostFocus;
        private _reset;
        constructor(name: string, position: Vector3, scene: Scene);
        public _getLockedTargetPosition(): Vector3;
        public _initCache(): void;
        public _updateCache(ignoreParentClass?: boolean): void;
        public _isSynchronizedViewMatrix(): boolean;
        private _computeLocalCameraSpeed();
        public setTarget(target: Vector3): void;
        public getTarget(): Vector3;
        public attachControl(element: HTMLElement, noPreventDefault?: boolean): void;
        public detachControl(element: HTMLElement): void;
        public _collideWithWorld(velocity: Vector3): void;
        public _checkInputs(): void;
        public _update(): void;
        public _getViewMatrix(): Matrix;
    }
}
